<?php

require('db.php');
require('core.php');

if(array_key_exists('interested', $_POST)) {
    // Form submitted, find data
    $data = doExec($_POST);
    if(!is_array($data)) {
        // If its not an array, an error occured
        die('An error occured while producing the bar chart: '.$data);
    } else {
        /* pChart library inclusions */ 
        include("pchart/class/pData.class.php"); 
        include("pchart/class/pDraw.class.php"); 
        include("pchart/class/pImage.class.php"); 
        
        /* Create and populate the pData object */
        
        // good luck beyond this point
        $MyData = new pData();
        $question_data = $data['questions'][$_POST['interested'][0]];

	$groups = array();
	foreach($question_data['group_options'] as $group_option => $group_count) {
		$groups[] = $group_option;
	}

        // For every question value (coloured sets)
        foreach($question_data['question_options'] as $question_option) {
            $g_values = array();
            foreach($question_data['group_options'] as $group_option => $group_count) {
                // record the perecentage for each group value

                if(!array_key_exists($question_option, $question_data['grouped_question_responses'][$group_option])) {
                    $question_data['grouped_question_responses'][$group_option][$question_option] = 0;
                }
                $g_values[] = round(($question_data['grouped_question_responses'][$group_option][$question_option]/$question_data['total_question_responses'][$question_option])*100,2);
            }

            $MyData->addPoints($g_values,$question_option);
        }
        
        $MyData->setAxisName(0,$_POST['filter']." in ".$_POST['interested'][0]." group as a percentage of all responses"); 
        $MyData->addPoints($groups,"Labels"); 
        $MyData->setSerieDescription("Labels","Choice"); 
        $MyData->setAbscissa("Labels"); 
        
        /* Create the pChart object */ 
        $myPicture = new pImage(1500,1000,$MyData);
        $myPicture->setFontProperties(array("FontName"=>"pchart/fonts/sans.ttf","FontSize"=>12));
        $RectangleSettings = array('StartR' => 37, 'StartG' => 37, 'StartB' => 37, 'EndR' => 17, 'EndG' => 17, 'EndB' => 17); 
        $myPicture->drawGradientArea(0,0,1500,75,DIRECTION_VERTICAL,$RectangleSettings);
        $myPicture->drawText(20, 30,$felix_survey_name,array("FontSize"=>12, 'R' => 255, 'G' => 255, 'B' => 255));
        $myPicture->drawText(20, 60,$_POST['interested'][0].' organised by '.$_POST['filter'],array("FontSize"=>21, 'R' => 255, 'G' => 255, 'B' => 255));
        $myPicture->setShadow(FALSE,array("X"=>1,"Y"=>1,"R"=>0,"G"=>0,"B"=>0,"Alpha"=>20));
        $myPicture->setShadow(TRUE,array("X"=>1,"Y"=>1,"R"=>0,"G"=>0,"B"=>0,"Alpha"=>20));
        $myPicture->drawText(20, 960,'Generated by Felix Surveys Data Tool on '.date("F j, Y, g:i a") ,array("FontSize"=>12));
        $myPicture->drawText(20, 980,"(c) Felix Imperial - www.felixonline.co.uk",array("FontSize"=>12));
        
        /* Draw the scale and the 1st chart */ 
        $myPicture->setGraphArea(400,100,1450,750);
        $AxisBoundaries = array(0=>array("Min"=>0,"Max"=>100));
        $ScaleSettings  = array("Mode"=>SCALE_MODE_START0,"DrawSubTicks"=>TRUE,"DrawArrows"=>TRUE,"ArrowSize"=>6,"LabelRotation"=>45);
        $myPicture->drawScale($ScaleSettings); 
        $myPicture->drawBarChart(array("DisplayValues"=>FALSE,"DisplayColor"=>DISPLAY_AUTO,"Surrounding"=>30)); 
        
        /* Write the chart legend */
        $myPicture->drawText(20, 100,'All bars of the same colour add to 100%',array("FontSize"=>12));
        $myPicture->drawText(20, 130,$_POST['filter'].' along bottom',array("FontSize"=>12));
        $myPicture->drawText(20, 155,$_POST['interested'][0].' key:',array("FontSize"=>12));
        $myPicture->drawLegend(20, 170,array("Style"=>LEGEND_NOBORDER, "Mode"=>LEGEND_VERTICAL));
        
        if($data['filter'] != '') {
            $myPicture->drawText(20, 930,'Filter applied: '.$data['filter'],array("FontSize"=>12));
        }
        
        $myPicture->stroke();
    }
} else {
    die('Data was not passed through');
}
